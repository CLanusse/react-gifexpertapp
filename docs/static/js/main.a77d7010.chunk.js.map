{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAmB1C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,EAAWK,QAA5B,mBAAuCE,OACrDN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,cACZC,SArBc,SAACR,GACvBF,EAAeE,EAAES,OAAOH,a,+BCLnBI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAID,EAAIC,GAAIC,MAAOF,EAAIE,MAAOV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAJ3E,kBAKZM,GALY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,qBAAac,UAAU,6CAAvB,UACI,6BAAKJ,IACL,qBAAKK,IAAKf,EAAKgB,IAAI,OAFdP,ICAJQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECCX,SAACA,GAAY,IAAD,EAEVf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAcpC,OAPAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACxBf,KAAMkB,EACNL,SAAS,SAE1B,CAACpB,IAEGqB,EDbwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAGpB,OACI,gCACK,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,oBAAIA,UAAU,YAAd,SACKH,EAAOJ,KAAI,SAAAkB,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEY3CiB,EAvBM,WAAK,IAAD,EAEe3C,mBAAS,CAAC,YAFzB,mBAEdQ,EAFc,KAEFT,EAFE,KAKrB,OAAO,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWgB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCdjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a77d7010.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories})=>{\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue((e.target.value))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // puede recibir un callback, con el estado anterior como argumento\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((categories) => [inputValue.trim(), ...categories])\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                placeholder=\"Hola Mundo!\"\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n// funcion async resuelve UNA PROMESA que retorna los gifs\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=F8OpHcQX4zWWiea6boAd6QRvTtj1ZUc9&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n    const gifs = data.map(gif => ({id: gif.id, title: gif.title, url: gif.images.downsized_medium.url}))\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <li key={id} className=\"card animate__animated animate__fadeInLeft\">\r\n            <h4>{title}</h4>\r\n            <img src={url} alt=\"\"/>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category)\r\n\r\n\r\n    return (\r\n        <div>\r\n             <h3>{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n             <ol className=\"card-grid\">\r\n                 {images.map(img => <GifGridItem key={img.id} {...img}/>)}\r\n             </ol>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs => setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    }))\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['Pikachu'])\r\n\r\n    \r\n    return <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}